{"version":3,"file":"static/js/962.d4427c1f.chunk.js","mappings":"gUAMA,SAASA,EAAcC,GACrB,MAAM,GAAN,OAAUA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,SAA7C,YAAyDJ,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,UAG9F,IAAMC,EAAkB,CACtB,QACA,SACA,QACA,SACA,UACA,OACA,UACA,QACA,UACA,SACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,OACA,SACA,OACA,SACA,QACA,SACA,SACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,OACA,SACA,OACA,QACA,QACA,OACA,QACA,QACA,OACA,QACA,QACA,UAGIC,EAAoB,CACxB,QACA,QACA,QACA,OACA,SACA,aACA,OACA,QACA,OACA,eACA,UACA,SACA,QACA,OACA,OACA,aACA,SACA,aACA,OACA,OACA,UACA,QACA,YACA,QACA,cACA,eACA,QACA,QACA,aACA,QACA,aACA,OACA,QACA,WACA,QACA,cACA,QACA,OACA,QACA,Q,uCC1GF,ECoBuB,SAAC,GAAoC,oBAAC,IACzD,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KACA,GADA,MACsBD,EAAAA,EAAAA,UAAS,SAA/B,eAAOE,EAAP,KAAYC,EAAZ,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,EAAeC,EAAAA,EAAAA,UAARC,GAAP,eACIC,GAAWC,EAAAA,EAAAA,MA+BTC,GACF,SAAC,IAAD,CACIC,QAzBgB,SAACC,GACrB,IAAQC,EAAQD,EAARC,IACJZ,EAAO,GACX,GACS,WADDY,EAEAZ,EFpCPT,EAAcO,QEwCPE,EF3CPT,EAAcM,GE8CfK,EAAOU,GACPN,EAAKO,eAAe,CAChBC,SAAUd,EACVC,IAAKW,IAETG,EAAAA,GAAAA,KAAA,qBAA2BH,EAA3B,kBAAwCZ,EAAxC,OASIgB,MAAO,CACH,CACIC,MAAO,YACPL,IAAK,OACLM,MAAM,SAACC,EAAA,EAAD,KAEV,CACIF,MAAO,cACPL,IAAK,SACLM,MAAM,SAACE,EAAA,EAAD,QAMtB,OACI,UAACC,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAgBrB,IAAKA,EAAKsB,MAAM,MAAMC,OAAO,SAC7C,UAAC,IAAD,CACIlB,KAAMA,EACNmB,SApDK,SAACC,GACdvB,GAASwB,EAAAA,EAAAA,GAAYD,IACrBpB,EAAKsB,cACLrB,EAAS,eAkDDsB,cAAe,CAAEf,SAAU,GAAIb,IAAK,QACpC6B,SA7Ba,WACrB5B,EAAOI,EAAKyB,cAAc,SAwBtB,WAMI,SAAC,SAAD,CACI/B,KAAK,WACLgC,MAAO,CACH,CACIC,UAAU,EACVlB,QAAS,8BAEb,CACImB,IAAK,GACLnB,QAAS,gCATrB,UAaI,SAAC,IAAD,CACIoB,aAAa,MACbC,YAAY,WACZC,MAAOrC,OAGf,SAAC,SAAD,CAAWA,KAAK,MAAMiB,MAAM,MAA5B,UACI,UAAC,WAAD,CAAaoB,MAAOpC,EAApB,WACI,UAAC,KAAD,CAAOoC,MAAM,OAAb,WACI,SAAClB,EAAA,EAAD,IADJ,YAGA,UAAC,KAAD,CAAOkB,MAAM,SAAb,WACI,SAACjB,EAAA,EAAD,IADJ,mBAKR,SAAC,SAAD,WACI,UAAC,IAAD,CACIkB,MAAM,SACNC,MAAO,CACHC,QAAS,OACTC,eAAgB,iBAJxB,WAOI,SAAC,IAAD,CAAUC,QAASjC,EAAnB,UACI,SAAC,IAAD,CAAQkC,KAAK,UAAb,UACI,UAAC,IAAD,uBAEI,SAACC,EAAA,EAAD,YAIZ,SAAC,IAAD,CAAQD,KAAK,UAAUE,SAAS,SAAhC","sources":["data/randomNames.js","pages/NewGame/index.ts","pages/NewGame/NewGame.tsx"],"sourcesContent":["export function getMaleName() {\n  return randomizeName(randomMaleNames)\n}\nexport function getFemaleName() {\n  return randomizeName(randomFemaleNames)\n}\nfunction randomizeName(arr) {\n  return `${arr[Math.floor(Math.random() * arr.length)]} ${arr[Math.floor(Math.random() * arr.length)]}`\n}\n\nconst randomMaleNames = [\n  \"Hurey\",\n  \"Phames\",\n  \"Heore\",\n  \"Hearda\",\n  \"Ealdrin\",\n  \"Tone\",\n  \"Eamwulf\",\n  \"Enryn\",\n  \"Grewsev\",\n  \"Lewill\",\n  \"Orcer\",\n  \"Lacio\",\n  \"Behrtio\",\n  \"Robern\",\n  \"Lewis\",\n  \"Munda\",\n  \"Narder\",\n  \"Forde\",\n  \"Gauwis\",\n  \"Eadged\",\n  \"Guthla\",\n  \"Tane\",\n  \"Ales\",\n  \"Tane\",\n  \"Gilrea\",\n  \"Ames\",\n  \"Flyone\",\n  \"Igbar\",\n  \"Raffin\",\n  \"Cholte\",\n  \"Wihtge\",\n  \"Wulfa\",\n  \"Sige\",\n  \"Mathye\",\n  \"Bojar\",\n  \"Steko\",\n  \"Prana\",\n  \"Nousan\",\n  \"Stiko\",\n  \"Zdacek\",\n  \"Bosek\",\n  \"Vata\",\n  \"Bora\",\n  \"Jarmir\",\n  \"Gila\",\n  \"Hildo\",\n  \"Gutto\",\n  \"Luso\",\n  \"Zaido\",\n  \"Hanno\",\n  \"Meza\",\n  \"Argin\",\n  \"Dusio\",\n  \"Arciar\",\n]\n\nconst randomFemaleNames = [\n  \"Bruna\",\n  \"Kater\",\n  \"Efrix\",\n  \"Elyn\",\n  \"Ceolwe\",\n  \"Ennen Ener\",\n  \"Wena\",\n  \"Elean\",\n  \"Wene\",\n  \"Malia Dysley\",\n  \"Eanflen\",\n  \"Eotall\",\n  \"Hilia\",\n  \"Some\",\n  \"Elin\",\n  \"Cilia Aves\",\n  \"Thilda\",\n  \"Elil Glyne\",\n  \"Wyna\",\n  \"Elyn\",\n  \"Burhiua\",\n  \"Aesen\",\n  \"Wene Gary\",\n  \"Burga\",\n  \"Joane Holte\",\n  \"Eveth Rewsav\",\n  \"Sybel\",\n  \"Earen\",\n  \"Abel Salte\",\n  \"Hilda\",\n  \"Mera Beray\",\n  \"Jane\",\n  \"Idgen\",\n  \"Ealdhild\",\n  \"Malia\",\n  \"Ecil Eldyth\",\n  \"Kater\",\n  \"Aben\",\n  \"Elean\",\n  \"Dome\",\n]\n","import { NewGame } from './NewGame';\nexport default NewGame;\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    Button,\n    Form,\n    Input,\n    Space,\n    Dropdown,\n    message,\n    Menu,\n    Radio,\n} from 'antd';\nimport { ManOutlined, WomanOutlined, DownOutlined } from '@ant-design/icons';\nimport CenteredContainer from 'components/molecules/CenteredContainer';\nimport { getFemaleName, getMaleName } from 'data/randomNames';\nimport { useAppDispatch } from 'hooks';\nimport { setUserData } from 'redux/userSlice';\nimport AvatarProvider from 'components/molecules/AvatarProvider/AvatarProvider';\n\ninterface INewGameProps {}\n\nexport const NewGame = ({ ...restProps }: INewGameProps) => {\n    const [name, setName] = useState('');\n    const [sex, setSex] = useState('male');\n    const dispatch = useAppDispatch();\n\n    const [form] = Form.useForm();\n    let navigate = useNavigate();\n\n    const onFinish = (values: any) => {\n        dispatch(setUserData(values));\n        form.resetFields();\n        navigate('/dashboard');\n    };\n\n    const handleMenuClick = (event: any) => {\n        const { key } = event;\n        let name = '';\n        switch (key) {\n            case 'female':\n                name = getFemaleName();\n                break;\n\n            default:\n                name = getMaleName();\n                break;\n        }\n        setSex(key);\n        form.setFieldsValue({\n            userName: name,\n            sex: key,\n        });\n        message.info(`Generating ${key} name: ${name}.`);\n    };\n    const handleFormChange = () => {\n        setSex(form.getFieldValue('sex'));\n    };\n\n    const menu = (\n        <Menu\n            onClick={handleMenuClick}\n            items={[\n                {\n                    label: 'Male name',\n                    key: 'male',\n                    icon: <ManOutlined />,\n                },\n                {\n                    label: 'Female name',\n                    key: 'female',\n                    icon: <WomanOutlined />,\n                },\n            ]}\n        />\n    );\n\n    return (\n        <CenteredContainer>\n            <AvatarProvider sex={sex} width='256' height='256' />\n            <Form\n                form={form}\n                onFinish={onFinish}\n                initialValues={{ userName: '', sex: 'male' }}\n                onChange={handleFormChange}\n            >\n                <Form.Item\n                    name='userName'\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your username',\n                        },\n                        {\n                            max: 20,\n                            message: 'No more than 20 characters.',\n                        },\n                    ]}\n                >\n                    <Input\n                        autoComplete='off'\n                        placeholder='Username'\n                        value={name}\n                    />\n                </Form.Item>\n                <Form.Item name='sex' label='Sex'>\n                    <Radio.Group value={sex}>\n                        <Radio value='male'>\n                            <ManOutlined /> male\n                        </Radio>\n                        <Radio value='female'>\n                            <WomanOutlined /> female\n                        </Radio>\n                    </Radio.Group>\n                </Form.Item>\n                <Form.Item>\n                    <Space\n                        align='center'\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                        }}\n                    >\n                        <Dropdown overlay={menu}>\n                            <Button type='default'>\n                                <Space>\n                                    Generate\n                                    <DownOutlined />\n                                </Space>\n                            </Button>\n                        </Dropdown>\n                        <Button type='primary' htmlType='submit'>\n                            Submit\n                        </Button>\n                    </Space>\n                </Form.Item>\n            </Form>\n        </CenteredContainer>\n    );\n};\n"],"names":["randomizeName","arr","Math","floor","random","length","randomMaleNames","randomFemaleNames","useState","name","sex","setSex","dispatch","useAppDispatch","Form","form","navigate","useNavigate","menu","onClick","event","key","setFieldsValue","userName","message","items","label","icon","ManOutlined","WomanOutlined","CenteredContainer","AvatarProvider","width","height","onFinish","values","setUserData","resetFields","initialValues","onChange","getFieldValue","rules","required","max","autoComplete","placeholder","value","align","style","display","justifyContent","overlay","type","DownOutlined","htmlType"],"sourceRoot":""}