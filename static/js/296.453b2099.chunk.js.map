{"version":3,"file":"static/js/296.453b2099.chunk.js","mappings":"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","sources":["pages/Dashboard/Tavern/DiceGame/DiceGame.tsx","pages/Dashboard/Tavern/Tavern.tsx","pages/Dashboard/Tavern/index.ts"],"sourcesContent":["import React from 'react';\nimport { Button, Divider, Modal, Radio, Slider, Space, Typography } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSackDollar } from '@fortawesome/free-solid-svg-icons';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport { incrementMoney, decrementMoney } from 'redux/userSlice';\nimport { GAME_SETTINGS } from 'data/settings';\n\ninterface IDiceGameProps {\n    visible: boolean;\n    setVisible: Function;\n}\nconst { Paragraph, Text, Title } = Typography;\nconst getRandomNumber = () => Math.floor(Math.random() * (10 - 1)) + 1;\n\nconst DiceGame = ({ visible, setVisible, ...restProps }: IDiceGameProps) => {\n    const { moneyAmount } = useAppSelector(state => state.user);\n    const dispach = useAppDispatch();\n\n    const [secretNumber, setSecretNumber] = React.useState(() =>\n        getRandomNumber()\n    );\n    const [sliderValue, setSliderValue] = React.useState(7);\n    const [inGame, setInGame] = React.useState(true);\n    const [step, setStep] = React.useState(3);\n    const winAlghoritm = sliderValue * 10;\n\n    // ustaw cene\n    const handleSliderChange = (e: number) => {\n        setSliderValue(prevValue => e);\n    };\n    // cancel (reset)\n    const handleCancel = () => {\n        handleReset();\n        setVisible(false);\n    };\n    const handleReset = () => {\n        setSliderValue(7);\n        setInGame(true);\n        setStep(3);\n        setSecretNumber(() => getRandomNumber());\n    };\n    // lub wybierz numer\n    const handleRadioChange = (e: any) => {\n        setStep(prevValue => prevValue - 1);\n        e.target.value === secretNumber\n            ? handleWinGame()\n            : dispach(decrementMoney(sliderValue));\n    };\n    // na koniec\n    const handleWinGame = () => {\n        setInGame(false);\n        setStep(0);\n        dispach(incrementMoney(winAlghoritm));\n    };\n\n    if (moneyAmount < GAME_SETTINGS.GUESS_MONEY_MIN) {\n        return (\n            <Modal\n                visible={visible}\n                title='You are broke!'\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <Title level={3}>Not enough money!</Title>\n                <Divider />\n                <Button onClick={handleCancel}>Cancel</Button>\n            </Modal>\n        );\n    }\n\n    if (moneyAmount > GAME_SETTINGS.GUESS_MONEY_MAX) {\n        return (\n            <Modal\n                visible={visible}\n                title='You are to good!'\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <Title level={3}>\n                    Please forgive us, but we are closing our bets now. We welcome\n                    you to other games worthy of your attention.\n                </Title>\n                <Divider />\n                <Button onClick={handleCancel}>Cancel</Button>\n            </Modal>\n        );\n    }\n\n    return (\n        <>\n            <Modal\n                visible={visible}\n                title='Guess a number'\n                footer={null}\n                onCancel={handleCancel}\n            >\n                {inGame ? (\n                    <>\n                        <Paragraph>\n                            Are you lucky? Or maybe you can predict the future.\n                            Can you predict a number? This is a simple game for\n                            simple people. Guess the number, win the money. The\n                            risk is small. For now...\n                        </Paragraph>\n\n                        <Slider\n                            defaultValue={7}\n                            min={4}\n                            max={10}\n                            value={sliderValue}\n                            onChange={handleSliderChange}\n                            disabled={step < 3}\n                        />\n                        <Space direction='vertical'>\n                            <Text>\n                                Use the slider. Bet your money. Now is:{' '}\n                                {sliderValue}\n                                <FontAwesomeIcon\n                                    icon={faSackDollar}\n                                    style={{ marginLeft: '5px' }}\n                                />\n                            </Text>\n                            <Text>\n                                You can win: {winAlghoritm}\n                                <FontAwesomeIcon\n                                    icon={faSackDollar}\n                                    style={{ marginLeft: '5px' }}\n                                />\n                            </Text>\n                            <Text>You have {step} attempts.</Text>\n                        </Space>\n                        <div\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                                margin: '10px 0',\n                            }}\n                        >\n                            <Radio.Group\n                                optionType='button'\n                                options={Array.from(\n                                    { length: 10 },\n                                    (_, i) => i + 1\n                                )}\n                                value={null}\n                                onChange={handleRadioChange}\n                                disabled={!step}\n                            />\n                        </div>\n                    </>\n                ) : (\n                    <div>\n                        You have won: {winAlghoritm}{' '}\n                        <FontAwesomeIcon\n                            icon={faSackDollar}\n                            style={{ marginLeft: '5px' }}\n                        />\n                    </div>\n                )}\n                <Divider />\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        marginTop: '10px',\n                    }}\n                >\n                    <Button onClick={handleCancel}>Cancel</Button>\n                    {!step && (\n                        <Button type='primary' onClick={handleReset}>\n                            Again\n                        </Button>\n                    )}\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default DiceGame;\n","import { Button, Card, Col, Image, Row, Space, Typography } from 'antd';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport DiceGame from './DiceGame/DiceGame';\nimport { incrementMoney } from 'redux/userSlice';\nimport { useAppDispatch, useAppSelector } from 'hooks';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faHandHoldingDollar,\n    faDice,\n    faXmarksLines,\n    faBeerMugEmpty,\n    faHandFist,\n} from '@fortawesome/free-solid-svg-icons';\nimport { GAME_SETTINGS } from 'data/settings';\n// images\nimport dices from '../../../assets/diceGame.jpg';\nimport drinking from '../../../assets/dringing.jpg';\nimport fighting from '../../../assets/fighting.jpg';\nimport guessing from '../../../assets/numbersGame.jpg';\nimport beggar from '../../../assets/beggar.jpg';\nimport noTavernEntry from '../../../assets/noTavernEntry.jpg';\nimport { Link, useNavigate } from 'react-router-dom';\n\ninterface ITavernProps {}\n\nconst { Title, Paragraph } = Typography;\nconst TavernStyled = styled.div`\n    padding: 2rem;\n`;\n\nexport const Tavern = ({ ...restProps }: ITavernProps) => {\n    const [isDiceModalVisible, setIsDiceModalVisible] = React.useState(false);\n    const { moneyAmount } = useAppSelector(state => state.user);\n    const dispatch = useAppDispatch();\n    const navigate = useNavigate();\n\n    const showDiceModal = () => {\n        setIsDiceModalVisible(true);\n    };\n\n    const handleAskMoney = () => {\n        dispatch(incrementMoney(1));\n    };\n\n    return (\n        <>\n            <TavernStyled>\n                <Title level={2}>Tavern</Title>\n                <Row gutter={[16, 24]}>\n                    {moneyAmount < GAME_SETTINGS.GUESS_MONEY_MIN && (\n                        <Col sm={24} md={12} xl={6}>\n                            <Card\n                                bordered={true}\n                                cover={<Image src={noTavernEntry} />}\n                            >\n                                <Title level={3}>No tavern entrance</Title>\n                                <Paragraph>\n                                    Where do you think you're going, raghead? Go\n                                    to town and beg for money. There's nothing\n                                    here for people like you. Don't come here\n                                    again unless you have money. Get out! Or\n                                    I'll sic the dogs on you!\n                                </Paragraph>\n                                <Link to='/dashboard/town'>\n                                    <Button block type='primary'>\n                                        <Space>\n                                            <FontAwesomeIcon\n                                                icon={faHandHoldingDollar}\n                                            />\n                                            Get out!\n                                        </Space>\n                                    </Button>\n                                </Link>\n                            </Card>\n                        </Col>\n                    )}\n                    {moneyAmount >= GAME_SETTINGS.GUESS_MONEY_MIN &&\n                        moneyAmount < GAME_SETTINGS.GUESS_MONEY_MAX && (\n                            <Col sm={24} md={12} xl={6}>\n                                <Card\n                                    bordered={true}\n                                    cover={<Image src={guessing} />}\n                                >\n                                    <Title level={3}>Guess a number</Title>\n                                    <Paragraph>\n                                        Are you lucky? Or maybe you can predict\n                                        the future. Can you predict a number?\n                                        This is a simple game for simple people.\n                                        Guess the number, win the money. The\n                                        risk is small. For now...\n                                    </Paragraph>\n\n                                    <Button\n                                        block\n                                        onClick={showDiceModal}\n                                        type='primary'\n                                    >\n                                        <Space>\n                                            <FontAwesomeIcon\n                                                icon={faXmarksLines}\n                                            />\n                                            Play!\n                                        </Space>\n                                    </Button>\n                                </Card>\n                            </Col>\n                        )}\n                    {moneyAmount > GAME_SETTINGS.DICE_MONEY_MIN &&\n                        moneyAmount < GAME_SETTINGS.DICE_MONEY_MAX && (\n                            <Col sm={24} md={12} xl={6}>\n                                <Card\n                                    bordered={true}\n                                    cover={<Image src={dices} />}\n                                >\n                                    <Title level={3}>Dice game</Title>\n                                    <Paragraph>\n                                        'Alea iacta est' said wise man once.\n                                        Time to roll the dice. A quick way to\n                                        make easy money. Provided you're lucky.\n                                        Dice in hand and roll. No time to waste\n                                        when the dice are rolling.\n                                    </Paragraph>\n                                    <Button block disabled>\n                                        <Space>\n                                            <FontAwesomeIcon icon={faDice} />\n                                            Roll some dice!\n                                        </Space>\n                                    </Button>\n                                </Card>\n                            </Col>\n                        )}\n                    {moneyAmount > GAME_SETTINGS.DRINK_MONEY_MIN &&\n                        moneyAmount < GAME_SETTINGS.DRINK_MONEY_MAX && (\n                            <Col sm={24} md={12} xl={6}>\n                                <Card\n                                    // title='Buy some drinks'\n                                    bordered={true}\n                                    cover={<Image src={drinking} />}\n                                >\n                                    <Title level={3}>Buy some drinks</Title>\n                                    <Paragraph>\n                                        You want to be a part of the company.\n                                        You want to earn points so that you are\n                                        respected. You want to be known in the\n                                        area. It will cost you. Time to call out\n                                        'I'm buying everyone a drink'!\n                                    </Paragraph>\n                                    <Button block disabled>\n                                        <Space>\n                                            <FontAwesomeIcon\n                                                icon={faBeerMugEmpty}\n                                            />\n                                            Socjalize!\n                                        </Space>\n                                    </Button>\n                                </Card>\n                            </Col>\n                        )}\n                    {moneyAmount > GAME_SETTINGS.FIGHT_MONEY_MIN && (\n                        <Col sm={24} md={12} xl={6}>\n                            <Card\n                                bordered={true}\n                                cover={<Image src={fighting} />}\n                            >\n                                <Title level={3}>The fight!</Title>\n                                <Paragraph>\n                                    It's time for some rough play for real men.\n                                    Only the rich have fun like this. You can\n                                    finally afford it too. Bet on the fight\n                                    between two heroes. Or maybe you want to\n                                    take part and kick some ass yourself?\n                                </Paragraph>\n                                <Button\n                                    block\n                                    disabled\n                                    style={{ marginBottom: '10px' }}\n                                >\n                                    <Space>\n                                        <FontAwesomeIcon icon={faHandFist} />\n                                        Bet on a fight!\n                                    </Space>\n                                </Button>\n                                <Button block disabled>\n                                    <Space>\n                                        <FontAwesomeIcon icon={faHandFist} />\n                                        Kick some ass!\n                                    </Space>\n                                </Button>\n                            </Card>\n                        </Col>\n                    )}\n                </Row>\n            </TavernStyled>\n            <DiceGame\n                visible={isDiceModalVisible}\n                setVisible={setIsDiceModalVisible}\n            />\n        </>\n    );\n};\n","import { Tavern } from './Tavern';\nexport default Tavern;\n"],"names":["Paragraph","Typography","Text","Title","getRandomNumber","Math","floor","random","visible","setVisible","moneyAmount","useAppSelector","state","user","dispach","useAppDispatch","React","secretNumber","setSecretNumber","sliderValue","setSliderValue","inGame","setInGame","step","setStep","winAlghoritm","handleCancel","handleReset","handleWinGame","incrementMoney","GAME_SETTINGS","title","footer","onCancel","level","onClick","defaultValue","min","max","value","onChange","e","prevValue","disabled","direction","icon","faSackDollar","style","marginLeft","display","justifyContent","margin","optionType","options","Array","from","length","_","i","target","decrementMoney","marginTop","type","TavernStyled","styled","isDiceModalVisible","setIsDiceModalVisible","useNavigate","gutter","sm","md","xl","bordered","cover","src","noTavernEntry","to","block","faHandHoldingDollar","guessing","faXmarksLines","dices","faDice","drinking","faBeerMugEmpty","fighting","marginBottom","faHandFist"],"sourceRoot":""}